HTTP API Documentation

Initializing requires base url path passed in.

Methods:

1. obj.login(str:username, str:password):
    Logs the user in. 
    Returns 1 if successful, 0 if unsuccessful and -1 if user already logged in. Caches the token automatically if successful.

2. obj.register(str:username, str:password, str:img_representation):
    Registers the user with the specified details.
    Returns True if successful, else returns False. False implies that a user with the same name already exists.
    The img_representation is made using a helpfer function - pfp_make().

3. obj.change_password(str:new_password):
    Changes logged in user's password.

4. obj.del_user():
    Deletes the logged in user. 
    Returns True if successful, else returns False.

5. obj.logout():
    Logs out the logged in user. 
    Returns True if successful, else returns False.

6. change_pfp(str:img_representation):
    Changes the pfp of user.

7. fetch_pfp(str:user_name):
    Returns the image representation of the pfp of user.

8. obj.mply_details(optional: int:position):
    Returns the values requested if valid position, else returns -1.

9. obj.stats(str:game, str:name):
    Returns the list of games played by user user_id. Format of each game - (<Game ID>,<Result>,<Winner>)

10. obj.addgame(str:game, str:winner_uuid, dict:results, list[int]:player_names):
    Adds game to the database.

11. obj.leaderboard(str:game, str:name):
    Returns dictionary with the game specific leaderboard information